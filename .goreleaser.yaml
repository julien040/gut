# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - binary: gut
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
    
    ldflags:
      - -X github.com/julien040/gut/src/telemetry.gutVersion={{.Version}}

  - binary: gut
    id: gut-darwin
    env:
      - CGO_ENABLED=0
    goos:
      - darwin

    ldflags:
      - -X github.com/julien040/gut/src/telemetry.gutVersion={{.Tag}}

    #hooks:
    #  post: ['doppler run --command="bash scripts/notarise.sh {{ .Path }}" ']

project_name: gut

nfpms:
  - id: gut
    package_name: gut
    vendor: Julien
    homepage: https://gut-cli.dev
    maintainer: Julien <contact@julienc.me>
    description: Gut is an easy to use Git client for the command line.
    license: MIT
    formats:
      - deb
      - rpm
    dependencies:
      - git
      - gnome-keyring
      - pass

snapcrafts:
  - id: gut
    name: gut
    summary: An easy to use Git client.
    description: Gut is an easy to use Git client for the command line. It follows a consistent naming convention and provides a simple way to manage your Git repositories.
    license: MIT

#chocolateys:
#  - owners: Julien CAGNIART
#    authors: Julien CAGNIART
#    description: Gut is an easy to use Git client for the command line.
#    project_url: https://gut-cli.dev
#    license_url: https://github.com/julien040/gut/blob/master/LICENSE
#    icon_url: https://gut-cli.dev/favicon.png
#    project_source_url: https://github.com/julien040/gut
#    docs_url: https://gut-cli.dev/docs
#    bug_tracker_url: https://github.com/julien040/gut/issues
#    tags: git cli version-control gut
#    summary: An easy to use Git client.
#    release_notes: https://github.com/julien040/gut/releases/tag/{{ .Tag }}
#    api_key: "{{ .Env.CHOCOLATEY_API_KEY }}"

brews:
  - tap:
      owner: julien040
      name: gut-tap
    commit_author:
      name: gut-bot
      email: contact@gut-cli.dev
    homepage: https://gut-cli.dev
    description: Gut is an easy to use Git client for the command line.
    license: MIT
    dependencies:
      - git

scoop:
  bucket:
    owner: julien040
    name: gut-scoop
  homepage: https://gut-cli.dev
  description: Gut is an easy to use Git client for the command line.
  license: MIT
  depends:
    - "git"

release:
  github:
    owner: julien040
    name: gut
  draft: true
  prerelease: auto

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip
checksum:
  name_template: "checksums.txt"
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
